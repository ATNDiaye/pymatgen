#!/usr/bin/python
import unittest
import os
import abc

import CifFile
import pymatgen
from   pymatgen.io.vaspio                    import *
from   pymatgen.io.feffio                    import *
from   pymatgen.io.feffio_set                import *
from   pymatgen.io.cifio                     import CifParser
from   pymatgen.core.structure               import Structure, Site, PeriodicSite
from   pymatgen.util.io_utils                import file_open_zip_aware

test_dir = os.path.join(os.path.dirname(os.path.abspath(pymatgen.__file__)), '..', 'test_files')
cif_file='CoO19128.cif'
central_atom='O'
cif_path=os.path.join(test_dir, cif_file)
r=CifParser(cif_path)
structure=r.get_structures()[0]
x=FeffInputSet("MaterialsProject")

class FeffInputSetTest(unittest.TestCase):

    header_string = """* This FEFF.inp file generated by pymatgen, www.materialsproject.org
TITLE cif file name:  CoO19128.cif
TITLE Structure Summary:  Co2 O2
TITLE Reduced formula:  CoO
TITLE space group: (P 1), space number  (1)
TITLE abc:  3.297078   3.297078   5.254213
TITLE angles: 90.000000  90.000000 120.000000
TITLE sites: 4
* 1 Co     0.666666     0.333332     0.496324
* 2 Co     0.333333     0.666667     0.996324
* 3 O     0.666666     0.333332     0.878676
* 4 O     0.333333     0.666667     0.378675"""

    def test_get_header(self):
        header=FeffInputSet.get_header(x, structure, cif_path)
        self.assertEqual(FeffInputSetTest.header_string.splitlines(), header.splitlines(),"Failed to read HEADER file")

    def test_getfefftags(self):           
        tags=FeffInputSet.get_fefftags(x,"XANES")
        self.assertEqual(tags["COREHOLE"], "FSR", "Failed to read PARAMETERS file")
        
    def test_get_feffPot(self):           
        POT=FeffInputSet.get_feffPot(x, structure, central_atom)
        d, dr = pymatgen.io.feffio.FeffPot.from_string(POT)
        self.assertEqual(d['Co'], 1, "Wrong symbols read in for FeffPot")

    def test_get_feffAtoms(self):
        ATOMS=FeffInputSet.get_feffAtoms(x, structure, central_atom)
        self.assertEqual(ATOMS.splitlines()[3].split()[4], central_atom, "failed to create ATOMS string")

class AbstractFeffInputSetTest(unittest.TestCase):

    def test_write_input(self):            
        x=FeffInputSet("MaterialsProject")

        FeffInputSet.write_input(x, structure, "XANES", cif_path, test_dir, central_atom)
        feff_path=os.path.join(test_dir, 'feff.inp')        
        feff2_path=os.path.join(test_dir, 'feff2.inp')
        with file_open_zip_aware(feff_path, "r") as fobject:
            feff=fobject.readlines()
        with file_open_zip_aware(feff2_path, "r") as fobject:
            feff2=fobject.readlines()

        self.assertEqual(feff, feff2, "Failed to generate feff.inp properly")


if __name__ == '__main__':
    unittest.main()

